{"version":3,"file":"js/media-source.0465945a.js","mappings":"iOACA,MAAMA,EAAa,CACjBC,GAAI,QACJC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,MAAO,MACPC,OAAQ,OAIV,OACEC,OAAQ,aACRC,MAAMC,GACJ,SAASC,EAAYC,EAAKC,GACxB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAOJ,GAChBE,EAAIG,aAAe,cACnBH,EAAII,OAAS,WACXL,EAASC,EAAIK,SACf,EACAL,EAAIM,MACN,CAuBA,OAtBA,SAAU,KACR,MAAMC,EAAQC,SAASC,eAAe,SAChCC,EAAY,6CAClB,GAAI,gBAAiBC,QAAUC,YAAYC,gBAAgBH,GAAY,CACrE,MAAMI,EAAc,IAAIF,YACxBL,EAAMQ,IAAMC,IAAIC,gBAAgBH,GAChCA,EAAYI,iBAAiB,aAAcC,EAC7C,CACA,SAASA,EAAWC,GAClBJ,IAAIK,gBAAgBd,EAAMQ,KAC1B,MAAMD,EAAcM,EAAGE,OACjBC,EAAeT,EAAYU,gBAAgBd,GACjDb,EAAY,GAAS4B,IACnBF,EAAaL,iBAAiB,aAAa,WACpCK,EAAaG,UAAuC,SAA3BZ,EAAYa,YACxCb,EAAYc,aAEhB,IACAL,EAAaM,aAAaJ,EAAI,GAElC,KAEK,CAACK,EAAMC,MACL,WAAc,QAAoB,QAAS5C,GAEtD,GC7CF,MAAM6C,EAAc,EAEpB,O","sources":["webpack://video-player-demo/./src/views/NativePlayer/mdiaSource.vue","webpack://video-player-demo/./src/views/NativePlayer/mdiaSource.vue?faf1"],"sourcesContent":["import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"video\",\n  controls: \"\",\n  muted: \"\",\n  autoplay: \"\",\n  width: \"600\",\n  height: \"300\"\n};\nimport { onMounted } from \"vue\";\nimport mp4file from \"../../assets/frag_bunny.mp4\";\nexport default {\n  __name: 'mdiaSource',\n  setup(__props) {\n    function fetchBuffer(url, callback) {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = function () {\n        callback(xhr.response);\n      };\n      xhr.send();\n    }\n    onMounted(() => {\n      const video = document.getElementById(\"video\");\n      const mimeCodec = 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"';\n      if (\"MediaSource\" in window && MediaSource.isTypeSupported(mimeCodec)) {\n        const mediaSource = new MediaSource();\n        video.src = URL.createObjectURL(mediaSource);\n        mediaSource.addEventListener(\"sourceopen\", sourceOpen);\n      }\n      function sourceOpen(ev) {\n        URL.revokeObjectURL(video.src);\n        const mediaSource = ev.target;\n        const sourceBuffer = mediaSource.addSourceBuffer(mimeCodec);\n        fetchBuffer(mp4file, buf => {\n          sourceBuffer.addEventListener(\"updateend\", function () {\n            if (!sourceBuffer.updating && mediaSource.readyState === \"open\") {\n              mediaSource.endOfStream();\n            }\n          });\n          sourceBuffer.appendBuffer(buf);\n        });\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"video\", _hoisted_1);\n    };\n  }\n};","/* unplugin-vue-components disabled */import script from \"./mdiaSource.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./mdiaSource.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","id","controls","muted","autoplay","width","height","__name","setup","__props","fetchBuffer","url","callback","xhr","XMLHttpRequest","open","responseType","onload","response","send","video","document","getElementById","mimeCodec","window","MediaSource","isTypeSupported","mediaSource","src","URL","createObjectURL","addEventListener","sourceOpen","ev","revokeObjectURL","target","sourceBuffer","addSourceBuffer","buf","updating","readyState","endOfStream","appendBuffer","_ctx","_cache","__exports__"],"sourceRoot":""}